package org.yashas.AirlineManagement.payload.airplane;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/** 
 * DTO for creating a new airplane.
 * The airplane ID is intentionally omitted as it is auto-generated by the system.
 * This class ensures input validation for mandatory fields.
 * Associated with POST /airplanes/ endpoint.
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
public class AirplaneRequestDTO {

    @Pattern(regexp = "^[A-Za-z0-9-]+$", message = "Tail number must be alphanumeric")
    @NotBlank(message = "Tail number is required")
    @Schema(description = "Tail number of the airplane", example = "TC-GGE", required = true)
    private String tailNumber;

    @NotBlank(message = "Model is required")
    @Schema(description = "Model of the airplane", example = "Airbus A320", required = true)
    private String model;

    @NotNull(message = "Capacity is required")
    @Min(value = 1, message = "Capacity must be greater than 0")
    @Schema(description = "Passenger capacity of the airplane", example = "220", required = true)
    private Integer capacity;

    @NotNull(message = "Production year is required")
    @Min(value = 1900, message = "Production year cannot be smaller than 1900")
    @Max(value = 2025, message = "Production year cannot be greater than 2025")
    @Schema(description = "Year the airplane was produced", example = "2010", required = true)
    private Integer productionYear;

    @NotNull(message = "Status is required. It must be either 'true' (available) or 'false' (not available).")
    @Schema(description = "Availability status of the airplane (true = available, false = not available)", example = "true", required = true)
    private Boolean status;
}